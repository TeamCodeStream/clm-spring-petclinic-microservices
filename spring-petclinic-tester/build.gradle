plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.7.10'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.7.10'
    id "com.github.ben-manes.versions" version '0.42.0'
}

apply plugin: 'java'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.6.4'
    implementation 'io.ktor:ktor-client-core:2.1.0'
    implementation 'io.ktor:ktor-client-cio:2.1.0'
    implementation "io.ktor:ktor-client-content-negotiation:2.1.0"
    implementation 'io.ktor:ktor-serialization-kotlinx-json:2.1.0'
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from(configurations.runtimeClasspath.files.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }

    manifest {
        attributes 'Implementation-Title': 'Foobar',
                'Built-Date': new Date(),
                'Built-JDK': System.getProperty('java.version'),
                'Main-Class': "integration.MainKt"
    }
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

// https://github.com/ben-manes/gradle-versions-plugin
tasks.named("dependencyUpdates").configure {
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}
